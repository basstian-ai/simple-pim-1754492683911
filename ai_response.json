{
  "commit_message": "feat: add arrayUtils.uniqueConcat helper with tests",
  "files": [
    {
      "path": "lib/arrayUtils.js",
      "content": "function uniqueConcat(arr1, arr2) {\n  // Ensure inputs are arrays\n  const a = Array.isArray(arr1) ? arr1 : [];\n  const b = Array.isArray(arr2) ? arr2 : [];\n\n  // Use a Set to deduplicate while preserving first occurrence order from arr1 then arr2\n  const seen = new Set();\n  const result = [];\n\n  for (const item of a) {\n    if (!seen.has(item)) {\n      seen.add(item);\n      result.push(item);\n    }\n  }\n\n  for (const item of b) {\n    if (!seen.has(item)) {\n      seen.add(item);\n      result.push(item);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = { uniqueConcat };\n"
    },
    {
      "path": "tests/arrayUtils.test.js",
      "content": "const { uniqueConcat } = require('../lib/arrayUtils');\n\ndescribe('uniqueConcat', () => {\n  test('merges two arrays and removes duplicates preserving order', () => {\n    expect(uniqueConcat([1, 2, 3], [3, 4, 5])).toEqual([1, 2, 3, 4, 5]);\n    expect(uniqueConcat(['a', 'b'], ['b', 'c'])).toEqual(['a', 'b', 'c']);\n  });\n\n  test('handles empty and null inputs', () => {\n    expect(uniqueConcat([], [])).toEqual([]);\n    expect(uniqueConcat(null, [1, 2])).toEqual([1, 2]);\n    expect(uniqueConcat([1, 2], null)).toEqual([1, 2]);\n  });\n\n  test('preserves order from first array when duplicates exist', () => {\n    expect(uniqueConcat(['x', 'y', 'z'], ['y', 'x'])).toEqual(['x', 'y', 'z']);\n  });\n\n  test('works with mixed types and repeated values', () => {\n    expect(uniqueConcat([1, '1', 2], ['1', 3, 2])).toEqual([1, '1', 2, 3]);\n  });\n});\n"
    }
  ]
}