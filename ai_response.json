{
  "files": [
    {
      "path": "components/ProductList.js",
      "content": "import React from 'react';\n\nconst ProductList = ({ products }) => {\n  return (\n    <div>\n      <h2>Product List</h2>\n      <ul>\n        {products.map((product) => (\n          <li key={product.id}>\n            <h3>{product.name}</h3>\n            <p>Price: ${product.price}</p>\n            <div>\n              {product.variants && product.variants.length > 0 && (\n                <div>\n                  <h4>Variants:</h4>\n                  <ul>\n                    {product.variants.map((variant) => (\n                      <li key={variant.id}>{variant.name} - ${variant.price}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ProductList;\n"
    },
    {
      "path": "tests/ProductList.test.js",
      "content": "import React from 'react';\nimport { render } from '@testing-library/react';\nimport ProductList from '../components/ProductList';\n\ndescribe('ProductList', () => {\n  it('renders product list with variants', () => {\n    const products = [\n      {\n        id: '1',\n        name: 'Product 1',\n        price: 100,\n        variants: [\n          { id: '1-1', name: 'Variant 1', price: 90 },\n          { id: '1-2', name: 'Variant 2', price: 95 },\n        ],\n      },\n    ];\n\n    const { getByText } = render(<ProductList products={products} />);\n\n    expect(getByText('Product List')).toBeInTheDocument();\n    expect(getByText('Product 1')).toBeInTheDocument();\n    expect(getByText('Price: $100')).toBeInTheDocument();\n    expect(getByText('Variants:')).toBeInTheDocument();\n    expect(getByText('Variant 1 - $90')).toBeInTheDocument();\n    expect(getByText('Variant 2 - $95')).toBeInTheDocument();\n  });\n});\n"
    }
  ]
}