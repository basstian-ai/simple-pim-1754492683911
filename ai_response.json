{
  "commit_message": "feat: add Attribute Groups CSV export API and test",
  "diff": "--- a/pages/api/attribute-groups/export.js\n+++ b/pages/api/attribute-groups/export.js\n@@ -0,0 +1,74 @@\n+export default async function handler(req, res) {\n+  if (req.method !== 'GET') {\n+    res.setHeader('Allow', 'GET');\n+    return res.status(405).json({ error: 'Method not allowed' });\n+  }\n+\n+  const groups = require('../../../data/attribute-groups.json');\n+\n+  const headers = ['id', 'name', 'attributesCount', 'attributes'];\n+\n+  const rows = Array.isArray(groups)\n+    ? groups.map((g) => ({\n+        id: g.id != null ? String(g.id) : g.slug != null ? String(g.slug) : String(g.name || ''),\n+        name: g.name != null ? String(g.name) : String(g.title || ''),\n+        attributesCount: Array.isArray(g.attributes)\n+          ? g.attributes.length\n+          : Array.isArray(g.items)\n+          ? g.items.length\n+          : 0,\n+        attributes: Array.isArray(g.attributes)\n+          ? g.attributes.map(String).join('|')\n+          : Array.isArray(g.items)\n+          ? g.items.map(String).join('|')\n+          : '',\n+      }))\n+    : [];\n+\n+  const csvEscape = (val) => {\n+    if (val === null || val === undefined) return '';\n+    const s = String(val);\n+    if (/[\",\\n]/.test(s)) return '\"' + s.replace(/\"/g, '\"\"') + '\"';\n+    return s;\n+  };\n+\n+  const csv = [\n+    headers.join(','),\n+    ...rows.map((row) => headers.map((h) => csvEscape(row[h])).join(',')),\n+  ].join('\\n');\n+\n+  res.setHeader('Content-Type', 'text/csv; charset=utf-8');\n+  res.setHeader('Content-Disposition', 'attachment; filename=\"attribute-groups.csv\"');\n+  return res.status(200).send(csv);\n+}\n",
  "files": [
    {
      "path": "pages/api/attribute-groups/export.js",
      "content": "export default async function handler(req, res) {\n  if (req.method !== 'GET') {\n    res.setHeader('Allow', 'GET');\n    return res.status(405).json({ error: 'Method not allowed' });\n  }\n\n  const groups = require('../../../data/attribute-groups.json');\n\n  const headers = ['id', 'name', 'attributesCount', 'attributes'];\n\n  const rows = Array.isArray(groups)\n    ? groups.map((g) => ({\n        id: g.id != null ? String(g.id) : g.slug != null ? String(g.slug) : String(g.name || ''),\n        name: g.name != null ? String(g.name) : String(g.title || ''),\n        attributesCount: Array.isArray(g.attributes)\n          ? g.attributes.length\n          : Array.isArray(g.items)\n          ? g.items.length\n          : 0,\n        attributes: Array.isArray(g.attributes)\n          ? g.attributes.map(String).join('|')\n          : Array.isArray(g.items)\n          ? g.items.map(String).join('|')\n          : '',\n      }))\n    : [];\n\n  const csvEscape = (val) => {\n    if (val === null || val === undefined) return '';\n    const s = String(val);\n    if (/[\",\\n]/.test(s)) return '\"' + s.replace(/\"/g, '\"\"') + '\"';\n    return s;\n  };\n\n  const csv = [\n    headers.join(','),\n    ...rows.map((row) => headers.map((h) => csvEscape(row[h])).join(',')),\n  ].join('\\n');\n\n  res.setHeader('Content-Type', 'text/csv; charset=utf-8');\n  res.setHeader('Content-Disposition', 'attachment; filename=\"attribute-groups.csv\"');\n  return res.status(200).send(csv);\n}\n"
    },
    {
      "path": "tests/api-attribute-groups-export.test.js",
      "content": "const path = require('path');\n\nfunction getHandler() {\n  const mod = require(path.join('..', 'pages', 'api', 'attribute-groups', 'export.js'));\n  return mod.default || mod;\n}\n\nfunction createMockRes() {\n  const res = {\n    statusCode: 200,\n    headers: {},\n    body: '',\n    setHeader(key, value) {\n      this.headers[key] = value;\n    },\n    status(code) {\n      this.statusCode = code;\n      return this;\n    },\n    end(data) {\n      this.body = data;\n      return this;\n    },\n    send(data) {\n      return this.end(data);\n    },\n    json(obj) {\n      this.setHeader('Content-Type', 'application/json');\n      return this.end(JSON.stringify(obj));\n    },\n  };\n  return res;\n}\n\ndescribe('API: Attribute Groups Export CSV', () => {\n  test('returns CSV with expected headers and row count', async () => {\n    const handler = getHandler();\n    const req = { method: 'GET' };\n    const res = createMockRes();\n\n    await handler(req, res);\n\n    expect(res.statusCode).toBe(200);\n\n    const contentType = Object.keys(res.headers).find(\n      (k) => k.toLowerCase() === 'content-type'\n    );\n    expect(res.headers[contentType]).toMatch(/text\\/csv/);\n\n    const csv = String(res.body || '');\n    const lines = csv.trim().split('\\n');\n    expect(lines[0]).toBe('id,name,attributesCount,attributes');\n\n    const groups = require(path.join('..', 'data', 'attribute-groups.json'));\n    const expectedCount = Array.isArray(groups) ? groups.length : 0;\n    expect(lines.length - 1).toBe(expectedCount);\n  });\n\n  test('rejects non-GET methods', async () => {\n    const handler = getHandler();\n    const req = { method: 'POST' };\n    const res = createMockRes();\n\n    await handler(req, res);\n\n    expect(res.statusCode).toBe(405);\n    const contentType = Object.keys(res.headers).find(\n      (k) => k.toLowerCase() === 'content-type'\n    );\n    expect(res.headers[contentType]).toMatch(/application\\/json/);\n    const payload = JSON.parse(res.body);\n    expect(payload.error).toBeDefined();\n  });\n});\n"
    }
  ]
}