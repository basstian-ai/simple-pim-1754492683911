{
  "files": [
    {
      "path": "lib/sampleProducts.js",
      "content": "const sampleProducts = [\n  {\n    id: \"prod_aurora_tee\",\n    slug: \"aurora-cotton-tshirt\",\n    name: \"Aurora Cotton T-Shirt\",\n    description:\n      \"Ultra-soft 100% cotton tee with a classic fit. Built for everyday comfort and durability.\",\n    sku: \"AUR-TEE\",\n    status: \"active\",\n    currency: \"USD\",\n    price: 1999,\n    compareAtPrice: 2499,\n    inventory: {\n      policy: \"deny\",\n      total: 320,\n      locations: [\n        { id: \"wh_nyc\", name: \"NYC Warehouse\", available: 180 },\n        { id: \"wh_sfo\", name: \"SFO Warehouse\", available: 140 }\n      ]\n    },\n    images: [\n      { src: \"/images/products/aurora-tee/main.jpg\", alt: \"Aurora Cotton T-Shirt front\" },\n      { src: \"/images/products/aurora-tee/back.jpg\", alt: \"Aurora Cotton T-Shirt back\" },\n      { src: \"/images/products/aurora-tee/detail.jpg\", alt: \"Fabric detail\" }\n    ],\n    options: [\n      { name: \"Color\", values: [\"Black\", \"White\", \"Navy\", \"Moss\"] },\n      { name: \"Size\", values: [\"XS\", \"S\", \"M\", \"L\", \"XL\"] }\n    ],\n    variants: [\n      { id: \"var_aurtee_blk_s\", sku: \"AUR-TEE-BLK-S\", options: { Color: \"Black\", Size: \"S\" }, barcode: \"1111111111111\", price: 1999, inventory: 40 },\n      { id: \"var_aurtee_blk_m\", sku: \"AUR-TEE-BLK-M\", options: { Color: \"Black\", Size: \"M\" }, barcode: \"1111111111112\", price: 1999, inventory: 60 },\n      { id: \"var_aurtee_wht_m\", sku: \"AUR-TEE-WHT-M\", options: { Color: \"White\", Size: \"M\" }, barcode: \"1111111111123\", price: 1999, inventory: 55 },\n      { id: \"var_aurtee_nvy_l\", sku: \"AUR-TEE-NVY-L\", options: { Color: \"Navy\", Size: \"L\" }, barcode: \"1111111111134\", price: 1999, inventory: 25 },\n      { id: \"var_aurtee_mos_xl\", sku: \"AUR-TEE-MOS-XL\", options: { Color: \"Moss\", Size: \"XL\" }, barcode: \"1111111111145\", price: 1999, inventory: 18 }\n    ],\n    attributeGroups: [\n      {\n        name: \"Basics\",\n        attributes: [\n          { key: \"brand\", label: \"Brand\", type: \"text\", value: \"Aurora\" },\n          { key: \"material\", label: \"Material\", type: \"text\", value: \"100% Cotton\" },\n          { key: \"care\", label: \"Care\", type: \"text\", value: \"Machine wash cold, tumble dry low\" }\n        ]\n      },\n      {\n        name: \"Dimensions\",\n        attributes: [\n          { key: \"weight\", label: \"Weight\", type: \"number\", unit: \"g\", value: 180 },\n          { key: \"package_dimensions\", label: \"Package Dimensions\", type: \"text\", value: \"30 x 25 x 3 cm\" }\n        ]\n      },\n      {\n        name: \"SEO\",\n        attributes: [\n          { key: \"metaTitle\", label: \"Meta Title\", type: \"text\", value: \"Aurora Cotton T-Shirt | Everyday Comfort\" },\n          { key: \"metaDescription\", label: \"Meta Description\", type: \"text\", value: \"Our best-selling cotton t-shirt offers a perfect blend of comfort and durability.\" }\n        ]\n      }\n    ]\n  },\n  {\n    id: \"prod_nimbus_shoes\",\n    slug: \"nimbus-running-shoes\",\n    name: \"Nimbus Running Shoes\",\n    description:\n      \"Lightweight road running shoes with breathable mesh upper and responsive foam. Designed for daily training and long runs.\",\n    sku: \"NIM-RUN\",\n    status: \"active\",\n    currency: \"USD\",\n    price: 8999,\n    compareAtPrice: null,\n    inventory: {\n      policy: \"continue\",\n      total: 145,\n      locations: [\n        { id: \"wh_nyc\", name: \"NYC Warehouse\", available: 70 },\n        { id: \"wh_sfo\", name: \"SFO Warehouse\", available: 75 }\n      ]\n    },\n    images: [\n      { src: \"/images/products/nimbus/main.jpg\", alt: \"Nimbus Running Shoes - side view\" },\n      { src: \"/images/products/nimbus/sole.jpg\", alt: \"Nimbus Running Shoes - outsole\" }\n    ],\n    options: [\n      { name: \"Color\", values: [\"Graphite\", \"Crimson\", \"Cobalt\"] },\n      { name: \"Size\", values: [\"7\", \"8\", \"9\", \"10\", \"11\", \"12\"] },\n      { name: \"Width\", values: [\"Regular\", \"Wide\"] }\n    ],\n    variants: [\n      { id: \"var_nim_gra_9_reg\", sku: \"NIM-GRA-9-R\", options: { Color: \"Graphite\", Size: \"9\", Width: \"Regular\" }, barcode: \"2222222222001\", price: 8999, inventory: 10 },\n      { id: \"var_nim_gra_10_reg\", sku: \"NIM-GRA-10-R\", options: { Color: \"Graphite\", Size: \"10\", Width: \"Regular\" }, barcode: \"2222222222002\", price: 8999, inventory: 12 },\n      { id: \"var_nim_cri_9_wide\", sku: \"NIM-CRI-9-W\", options: { Color: \"Crimson\", Size: \"9\", Width: \"Wide\" }, barcode: \"2222222222003\", price: 8999, inventory: 8 },\n      { id: \"var_nim_cob_11_reg\", sku: \"NIM-COB-11-R\", options: { Color: \"Cobalt\", Size: \"11\", Width: \"Regular\" }, barcode: \"2222222222004\", price: 8999, inventory: 9 }\n    ],\n    attributeGroups: [\n      {\n        name: \"Performance\",\n        attributes: [\n          { key: \"drop\", label: \"Heel-to-Toe Drop\", type: \"number\", unit: \"mm\", value: 8 },\n          { key: \"stack\", label: \"Stack Height\", type: \"number\", unit: \"mm\", value: 28 },\n          { key: \"terrain\", label: \"Terrain\", type: \"text\", value: \"Road\" }\n        ]\n      },\n      {\n        name: \"Materials\",\n        attributes: [\n          { key: \"upper\", label: \"Upper\", type: \"text\", value: \"Engineered Mesh\" },\n          { key: \"midsole\", label: \"Midsole\", type: \"text\", value: \"Responsive EVA Foam\" },\n          { key: \"outsole\", label: \"Outsole\", type: \"text\", value: \"Rubber\" }\n        ]\n      }\n    ]\n  },\n  {\n    id: \"prod_luna_mug\",\n    slug: \"luna-ceramic-mug\",\n    name: \"Luna Ceramic Mug\",\n    description:\n      \"12 oz ceramic mug with matte glaze and ergonomic handle. Microwave and dishwasher safe.\",\n    sku: \"LUN-MUG\",\n    status: \"draft\",\n    currency: \"USD\",\n    price: 1499,\n    compareAtPrice: 1799,\n    inventory: {\n      policy: \"deny\",\n      total: 520,\n      locations: [\n        { id: \"wh_nyc\", name: \"NYC Warehouse\", available: 300 },\n        { id: \"wh_sfo\", name: \"SFO Warehouse\", available: 220 }\n      ]\n    },\n    images: [\n      { src: \"/images/products/luna-mug/main.jpg\", alt: \"Luna ceramic mug - matte gray\" },\n      { src: \"/images/products/luna-mug/handle.jpg\", alt: \"Luna mug handle detail\" }\n    ],\n    options: [\n      { name: \"Color\", values: [\"Matte Gray\", \"Ivory\", \"Forest\"] }\n    ],\n    variants: [\n      { id: \"var_luna_gray_std\", sku: \"LUN-GRY-12OZ\", options: { Color: \"Matte Gray\" }, barcode: \"3333333333001\", price: 1499, inventory: 180 },\n      { id: \"var_luna_ivory_std\", sku: \"LUN-IVR-12OZ\", options: { Color: \"Ivory\" }, barcode: \"3333333333002\", price: 1499, inventory: 210 },\n      { id: \"var_luna_forest_std\", sku: \"LUN-FOR-12OZ\", options: { Color: \"Forest\" }, barcode: \"3333333333003\", price: 1499, inventory: 130 }\n    ],\n    attributeGroups: [\n      {\n        name: \"Specs\",\n        attributes: [\n          { key: \"capacity\", label: \"Capacity\", type: \"number\", unit: \"oz\", value: 12 },\n          { key: \"finish\", label: \"Finish\", type: \"text\", value: \"Matte glaze\" },\n          { key: \"dimensions\", label: \"Dimensions\", type: \"text\", value: \"9.5 cm x 8.5 cm\" }\n        ]\n      },\n      {\n        name: \"Compliance\",\n        attributes: [\n          { key: \"foodSafe\", label: \"Food Safe\", type: \"boolean\", value: true },\n          { key: \"microwaveSafe\", label: \"Microwave Safe\", type: \"boolean\", value: true },\n          { key: \"dishwasherSafe\", label: \"Dishwasher Safe\", type: \"boolean\", value: true }\n        ]\n      }\n    ]\n  }\n];\n\nmodule.exports = sampleProducts;\n"
    },
    {
      "path": "pages/api/products/sample.js",
      "content": "const sampleProducts = require(\"../../../lib/sampleProducts\");\n\nexport default function handler(req, res) {\n  if (req.method !== \"GET\") {\n    res.setHeader(\"Allow\", [\"GET\"]);\n    return res.status(405).json({ error: \"Method Not Allowed\" });\n  }\n\n  const { q } = req.query;\n  let products = sampleProducts;\n\n  if (q && typeof q === \"string\") {\n    const term = q.toLowerCase();\n    products = sampleProducts.filter((p) =>\n      [p.name, p.slug, p.sku]\n        .filter(Boolean)\n        .some((s) => String(s).toLowerCase().includes(term))\n    );\n  }\n\n  res.status(200).json({ count: products.length, products });\n}\n"
    },
    {
      "path": "pages/admin/sample-products.js",
      "content": "import { useEffect, useMemo, useState } from \"react\";\nimport Link from \"next/link\";\n\nfunction ProductCard({ product }) {\n  const [copied, setCopied] = useState(false);\n  const price = useMemo(() => {\n    const dollars = (product.price / 100).toFixed(2);\n    return `${product.currency} ${dollars}`;\n  }, [product.price, product.currency]);\n\n  async function copyJson() {\n    try {\n      const json = JSON.stringify(product, null, 2);\n      if (navigator?.clipboard?.writeText) {\n        await navigator.clipboard.writeText(json);\n      } else {\n        const textarea = document.createElement(\"textarea\");\n        textarea.value = json;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(textarea);\n      }\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1500);\n    } catch (e) {\n      console.error(\"Copy failed\", e);\n      alert(\"Copy to clipboard failed\");\n    }\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"media\">\n        {/* eslint-disable-next-line @next/next/no-img-element */}\n        <img src={product.images?.[0]?.src || \"/placeholder.png\"} alt={product.images?.[0]?.alt || product.name} />\n      </div>\n      <div className=\"info\">\n        <div className=\"title\">\n          <strong>{product.name}</strong>\n          <span className={`badge ${product.status}`}>{product.status}</span>\n        </div>\n        <div className=\"meta\">\n          <span>SKU: {product.sku}</span>\n          <span>Price: {price}</span>\n          <span>Variants: {product.variants?.length || 0}</span>\n        </div>\n        <p className=\"desc\">{product.description}</p>\n        <div className=\"groups\">\n          {product.attributeGroups?.slice(0, 2).map((g) => (\n            <div className=\"group\" key={g.name}>\n              <div className=\"groupName\">{g.name}</div>\n              <ul>\n                {g.attributes.slice(0, 3).map((a) => (\n                  <li key={a.key}>\n                    <span className=\"k\">{a.label || a.key}:</span> {String(a.value)}{a.unit ? ` ${a.unit}` : \"\"}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n        <div className=\"actions\">\n          <button onClick={copyJson}>{copied ? \"Copied\" : \"Copy JSON\"}</button>\n          <a className=\"secondary\" href={`/api/products/sample?q=${encodeURIComponent(product.sku)}`} target=\"_blank\" rel=\"noreferrer\">API Preview</a>\n        </div>\n      </div>\n      <style jsx>{`\n        .card { display: flex; gap: 16px; padding: 16px; border: 1px solid #e5e7eb; border-radius: 8px; background: #fff; }\n        .media { width: 140px; height: 140px; flex: 0 0 auto; overflow: hidden; border-radius: 8px; background: #f3f4f6; display: flex; align-items: center; justify-content: center; }\n        img { width: 100%; height: 100%; object-fit: cover; }\n        .info { flex: 1; display: flex; flex-direction: column; gap: 8px; }\n        .title { display: flex; align-items: center; gap: 8px; font-size: 16px; }\n        .badge { font-size: 11px; padding: 2px 6px; border-radius: 9999px; text-transform: uppercase; letter-spacing: .03em; }\n        .badge.active { background: #ecfdf5; color: #065f46; border: 1px solid #a7f3d0; }\n        .badge.draft { background: #fef3c7; color: #92400e; border: 1px solid #fde68a; }\n        .meta { display: flex; gap: 12px; color: #6b7280; font-size: 13px; }\n        .desc { color: #374151; font-size: 14px; margin: 0; }\n        .groups { display: grid; grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 8px; }\n        .group { background: #f9fafb; padding: 8px; border-radius: 6px; border: 1px solid #eef2f7; }\n        .groupName { font-weight: 600; font-size: 12px; color: #374151; margin-bottom: 4px; }\n        .k { color: #6b7280; }\n        .actions { display: flex; gap: 8px; margin-top: 8px; }\n        button { background: #111827; color: #fff; border: none; padding: 8px 12px; border-radius: 6px; cursor: pointer; }\n        .secondary { border: 1px solid #d1d5db; padding: 7px 12px; border-radius: 6px; color: #111827; text-decoration: none; }\n      `}</style>\n    </div>\n  );\n}\n\nexport default function SampleProductsAdmin() {\n  const [query, setQuery] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    let active = true;\n    setLoading(true);\n    const url = query ? `/api/products/sample?q=${encodeURIComponent(query)}` : \"/api/products/sample\";\n    fetch(url)\n      .then((r) => r.json())\n      .then((data) => {\n        if (!active) return;\n        setProducts(Array.isArray(data.products) ? data.products : []);\n        setError(null);\n      })\n      .catch((e) => active && setError(e?.message || \"Failed to load\"))\n      .finally(() => active && setLoading(false));\n    return () => {\n      active = false;\n    };\n  }, [query]);\n\n  async function copyAll() {\n    try {\n      const json = JSON.stringify(products, null, 2);\n      if (navigator?.clipboard?.writeText) {\n        await navigator.clipboard.writeText(json);\n      } else {\n        const textarea = document.createElement(\"textarea\");\n        textarea.value = json;\n        document.body.appendChild(textarea);\n        textarea.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(textarea);\n      }\n      alert(\"All sample products copied to clipboard\");\n    } catch (e) {\n      alert(\"Copy failed\");\n    }\n  }\n\n  return (\n    <div className=\"wrap\">\n      <header className=\"hdr\">\n        <div>\n          <h1>Sample Products</h1>\n          <p className=\"sub\">Browse and copy rich sample products to seed your catalog.</p>\n        </div>\n        <nav className=\"nav\">\n          <Link href=\"/\">\n            <a className=\"link\">Dashboard</a>\n          </Link>\n        </nav>\n      </header>\n\n      <section className=\"toolbar\">\n        <input\n          type=\"search\"\n          placeholder=\"Search by name, slug, or SKU\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          aria-label=\"Search sample products\"\n        />\n        <div className=\"spacer\" />\n        <button onClick={copyAll} disabled={!products.length}>Copy All</button>\n      </section>\n\n      {loading && <div className=\"state\">Loading...</div>}\n      {error && <div className=\"state err\">{error}</div>}\n      {!loading && !error && (\n        <div className=\"grid\">\n          {products.map((p) => (\n            <ProductCard key={p.id} product={p} />\n          ))}\n          {!products.length && <div className=\"state\">No sample products found.</div>}\n        </div>\n      )}\n\n      <style jsx>{`\n        .wrap { max-width: 1000px; margin: 0 auto; padding: 20px; }\n        .hdr { display: flex; align-items: center; justify-content: space-between; margin-bottom: 16px; }\n        h1 { margin: 0; font-size: 22px; }\n        .sub { margin: 4px 0 0; color: #6b7280; }\n        .nav .link { color: #2563eb; text-decoration: none; }\n        .toolbar { display: flex; align-items: center; gap: 12px; margin-bottom: 16px; }\n        input[type=\"search\"] { padding: 8px 10px; border: 1px solid #d1d5db; border-radius: 6px; width: 100%; }\n        .spacer { flex: 1; }\n        .grid { display: grid; grid-template-columns: 1fr; gap: 12px; }\n        .state { padding: 16px; color: #6b7280; }\n        .state.err { color: #b91c1c; }\n        @media (min-width: 860px) { .grid { grid-template-columns: 1fr 1fr; } }\n      `}</style>\n    </div>\n  );\n}\n"
    },
    {
      "path": "__tests__/sampleProducts.test.js",
      "content": "const assert = require(\"assert\");\nconst sampleProducts = require(\"../lib/sampleProducts\");\n\ndescribe(\"sampleProducts\", () => {\n  it(\"exports a non-empty array\", () => {\n    assert(Array.isArray(sampleProducts));\n    assert(sampleProducts.length >= 3);\n  });\n\n  it(\"has required fields and variant/attribute structures\", () => {\n    for (const p of sampleProducts) {\n      assert(p.id && typeof p.id === \"string\");\n      assert(p.slug && typeof p.slug === \"string\");\n      assert(p.name && typeof p.name === \"string\");\n      assert(p.sku && typeof p.sku === \"string\");\n      assert(Array.isArray(p.variants));\n      assert(Array.isArray(p.attributeGroups));\n      for (const g of p.attributeGroups) {\n        assert(g.name && typeof g.name === \"string\");\n        assert(Array.isArray(g.attributes));\n      }\n    }\n  });\n});\n"
    }
  ]
}