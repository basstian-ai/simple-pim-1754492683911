{
  "commit_message": "Feature: Add slugify API endpoint and test for generating slugs via /api/slugify",
  "patch": "--- a/pages/api/slugify.js\n+++ b/pages/api/slugify.js\n@@\n+import slugify from '../../lib/slugify';\n+\n+export default function handler(req, res) {\n+  if (req.method !== 'GET' && req.method !== 'POST') {\n+    res.setHeader('Allow', 'GET, POST');\n+    return res.status(405).json({ error: 'Method Not Allowed' });\n+  }\n+\n+  const text = (\n+    (req.query && (req.query.q || req.query.text)) ||\n+    (req.body && req.body.text) ||\n+    ''\n+  ).toString();\n+\n+  const result = slugify(text);\n+  return res.status(200).json({ slug: result });\n+}\n",
  "files": [
    {
      "path": "pages/api/slugify.js",
      "content": "import slugify from '../../lib/slugify';\n\nexport default function handler(req, res) {\n  if (req.method !== 'GET' && req.method !== 'POST') {\n    res.setHeader('Allow', 'GET, POST');\n    return res.status(405).json({ error: 'Method Not Allowed' });\n  }\n\n  const text = (\n    (req.query && (req.query.q || req.query.text)) ||\n    (req.body && req.body.text) ||\n    ''\n  ).toString();\n\n  const result = slugify(text);\n  return res.status(200).json({ slug: result });\n}\n"
    },
    {
      "path": "tests/api-slugify.test.js",
      "content": "const mod = require('../pages/api/slugify');\nconst handler = mod.default || mod;\n\nfunction createRes() {\n  const res = {};\n  res.statusCode = 200;\n  res.headers = {};\n  res.setHeader = (k, v) => {\n    res.headers[k] = v;\n  };\n  res._data = '';\n  res.end = (d = '') => {\n    res._data += d;\n    res.finished = true;\n  };\n  res.status = (code) => {\n    res.statusCode = code;\n    return res;\n  };\n  res.json = (obj) => {\n    res.setHeader('Content-Type', 'application/json');\n    res.end(JSON.stringify(obj));\n  };\n  return res;\n}\n\ndescribe('/api/slugify', () => {\n  it('returns a slug for a query param', async () => {\n    const req = { method: 'GET', query: { q: 'Hello World!' } };\n    const res = createRes();\n    await handler(req, res);\n    const body = JSON.parse(res._data || '{}');\n    expect(body.slug).toBe('hello-world');\n    expect(res.statusCode).toBe(200);\n  });\n\n  it('returns 405 for unsupported methods', async () => {\n    const req = { method: 'PUT', query: {} };\n    const res = createRes();\n    await handler(req, res);\n    expect(res.statusCode).toBe(405);\n  });\n});\n"
    }
  ]
}