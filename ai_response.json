{
  "files": [
    {
      "path": "lib/sku.js",
      "content": "'use strict';\n\nfunction slugify(input) {\n  if (!input || typeof input !== 'string') return '';\n  const ascii = input.normalize ? input.normalize('NFKD') : input;\n  const noDiacritics = ascii.replace(/[\\u0300-\\u036f]/g, '');\n  const replaced = noDiacritics\n    .replace(/[^A-Za-z0-9]+/g, '-')\n    .replace(/-{2,}/g, '-')\n    .replace(/^[\\-_]+|[\\-_]+$/g, '');\n  return replaced.toUpperCase();\n}\n\nfunction generateSku(name, opts) {\n  const options = opts || {};\n  const slug = slugify(name);\n  if (!slug) return '';\n  let hash = 0 >>> 0;\n  for (let i = 0; i < slug.length; i++) {\n    hash = ((hash * 31) + slug.charCodeAt(i)) >>> 0;\n  }\n  let code = hash.toString(36).toUpperCase();\n  if (code.length < 6) code = code.padStart(6, '0');\n  else code = code.slice(-6);\n  const parts = [];\n  if (options.prefix) parts.push(String(options.prefix).toUpperCase());\n  parts.push(slug, code);\n  return parts.join('-');\n}\n\nmodule.exports = { slugify, generateSku };"
    },
    {
      "path": "pages/api/sku.js",
      "content": "'use strict';\n\nconst { generateSku } = require('../../lib/sku');\n\nmodule.exports = (req, res) => {\n  const method = req.method || 'GET';\n  const source = method === 'POST' ? (req.body || {}) : (req.query || {});\n  const name = typeof source.name === 'string' ? source.name : '';\n  const prefix = typeof source.prefix === 'string' ? source.prefix : undefined;\n\n  if (!name) {\n    res.statusCode = 400;\n    res.setHeader('Content-Type', 'application/json; charset=utf-8');\n    res.end(JSON.stringify({ error: 'name is required' }));\n    return;\n  }\n\n  const sku = generateSku(name, { prefix });\n\n  res.statusCode = 200;\n  res.setHeader('Cache-Control', 's-maxage=60, stale-while-revalidate=300');\n  res.setHeader('Content-Type', 'application/json; charset=utf-8');\n  res.end(JSON.stringify({ sku }));\n};"
    },
    {
      "path": "__tests__/sku.test.js",
      "content": "'use strict';\n\nconst { slugify, generateSku } = require('../lib/sku');\n\ndescribe('SKU utilities', () => {\n  test('slugify produces uppercase, hyphenated ASCII', () => {\n    expect(slugify('CafÃ© Racer 2.0!')).toBe('CAFE-RACER-2-0');\n    expect(slugify('  --- Hello__World ---  ')).toBe('HELLO-WORLD');\n  });\n\n  test('generateSku returns deterministic SKU with checksum', () => {\n    const sku1 = generateSku('Test Product');\n    const sku2 = generateSku('Test Product');\n    const sku3 = generateSku('Different Name');\n    expect(sku1).toMatch(/^TEST-PRODUCT-[A-Z0-9]{6}$/);\n    expect(sku1).toBe(sku2);\n    expect(sku3).toMatch(/^DIFFERENT-NAME-[A-Z0-9]{6}$/);\n    expect(sku3).not.toBe(sku1);\n  });\n\n  test('generateSku supports optional prefix', () => {\n    const sku = generateSku('Widget', { prefix: 'pim' });\n    expect(sku).toMatch(/^PIM-WIDGET-[A-Z0-9]{6}$/);\n  });\n});"
    }
  ]
}